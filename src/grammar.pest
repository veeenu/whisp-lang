program = {
  SOI ~ 
  function_declaration* ~ 
  EOI 
}

lexical_declaration = ${
  "let" ~ WHITESPACE+ ~ 
  identifier ~ WHITESPACE* ~
  "=" ~ WHITESPACE* ~ 
  expression ~ WHITESPACE* ~ ";"
}

function_declaration = ${
  "fn" ~ WHITESPACE+ ~
  identifier ~ WHITESPACE* ~
  formal_parameters ~ WHITESPACE* ~
  statement_block
}

identifier = @{ (!RESERVED_IDENTIFIER ~ (ASCII_ALPHANUMERIC | "_")+) }

quoted_string = { ("\"" ~ quoted_string_content ~ "\"") }
quoted_string_content = { (!("\"") ~ ANY)* }

raw_quoted_string = { "r#\"" ~ raw_quoted_string_content ~ "\"#"}
raw_quoted_string_content = { (!("\"#") ~ ANY)* }

unquoted_string = { (!(RESERVED | WHITESPACE) ~ ANY)+ }

number = { float | int }
int = @{ "-"? ~ ASCII_DIGIT+ }
float = @{ "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }

formal_parameters = !{ "(" ~ (identifier ~ ",")* ~ (identifier ~ ","?)? ~ ")" }

statement_block = !{
  "{" ~ statement_block_item* ~ (#tail_expr = expression?) ~ "}"
}

statement_block_item = !{
  statement | (expression ~ ";")
}

statement = !{
  function_declaration | lexical_declaration | break_stmt
}

expression = !{
  quoted_string |
  raw_quoted_string |
  number |
  statement_block | 
  parenthesis_expression |
  function_call |
  if_expr |
  loop_expr |
  identifier
}

parenthesis_expression = !{ "(" ~ expression ~ ")" }

function_call = ${
  identifier ~ WHITESPACE* ~ function_args
}

function_args = ${
  (
  "(" ~ WHITESPACE* ~ 
    (expression ~ WHITESPACE* ~ "," ~ WHITESPACE*)* ~ 
    (expression ~ WHITESPACE*)* ~ 
  ")"
  ) | ("(" ~ WHITESPACE* ~ ")")
}

if_expr = ${
  if_cond ~
  (WHITESPACE* ~ else_if_cond)* ~
  (WHITESPACE* ~ else_cond)?
}

if_cond = ${
  "if" ~ WHITESPACE+ ~
  parenthesis_expression ~ WHITESPACE* ~
  statement_block
}

else_if_cond = ${
  "else" ~ WHITESPACE+ ~ "if" ~ WHITESPACE* ~
  parenthesis_expression ~ WHITESPACE* ~
  statement_block
}

else_cond = ${
  "else" ~ WHITESPACE* ~ statement_block
}

loop_expr = ${
  "loop" ~ WHITESPACE* ~ statement_block
}

break_stmt = ${
  "break" ~ (WHITESPACE+ ~ expression)? ~ ";"?
}

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
RESERVED = _{";" | "{" | "}" | "(" | ")" | "\""}
RESERVED_IDENTIFIER = @{ "if" | "else" | "loop" | "break" | "fn" | "let" }
